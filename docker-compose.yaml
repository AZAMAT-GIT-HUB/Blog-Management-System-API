services:
  # PHP-FPM Service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: blog_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - blog_network
    depends_on:
      - db

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: blog_webserver
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - blog_network
    depends_on:
      - app

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: blog_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: blog_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: blog_user
      MYSQL_PASSWORD: blog_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    networks:
      - blog_network

  # phpMyAdmin (опционально)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: blog_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: blog_user
      PMA_PASSWORD: blog_password
    ports:
      - "8081:80"
    networks:
      - blog_network
    depends_on:
      - db

  # Redis (для кэширования и очередей)
  redis:
    image: redis:alpine
    container_name: blog_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - blog_network

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger_ui
    restart: unless-stopped
    ports:
      - "8082:8080" # Swagger UI будет доступен по http://localhost:8082
    environment:
      SWAGGER_JSON: /docs/api-docs.json
    volumes:
      - ./src/storage/api-docs:/docs
    networks:
      - blog_network

# Docker Networks
networks:
  blog_network:
    driver: bridge

# Volumes
volumes:
  db_data:
    driver: local